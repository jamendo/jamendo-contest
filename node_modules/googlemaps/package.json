{
  "name": "googlemaps",
  "version": "0.1.8",
  "main": "./lib/googlemaps",
  "description": "A simple way to query the Google Maps API from Node.js",
  "author": {
    "name": "Colin Kennedy",
    "email": "moshen.colin@gmail.com",
    "url": "http://moshen.net"
  },
  "keywords": [
    "map",
    "geo",
    "google",
    "api"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/moshen/node-googlemaps"
  },
  "devDependencies": {
    "vows": "*"
  },
  "engines": {
    "node": ">=0.3.6"
  },
  "dependencies": {
    "request": "~2.2.9",
    "waitress": ">=0.0.2"
  },
  "scripts": {
    "test": "NODE_ENV=test vows test/*.js --spec"
  },
  "readme": "# Google Maps API for Node.js\nA simple way to query the Google Maps API from Node.js\n\nThis has become a fairly complete api.  Criticism/Suggestions/Patches/PullReq's welcome.\n\n# Installation\n### Installing npm (node package manager)\n\n    curl http://npmjs.org/install.sh | sh\n\n### Installing googlemaps\n\n    npm install googlemaps\n\n# Status\nAPIs implemented:\n\n* [Geocoding](http://code.google.com/apis/maps/documentation/geocoding/)\n* [Directions](http://code.google.com/apis/maps/documentation/directions/)\n* [Elevation](http://code.google.com/apis/maps/documentation/elevation/)\n* [Places](http://code.google.com/apis/maps/documentation/places/)\n* [Place Details](https://code.google.com/apis/maps/documentation/places/#PlaceDetails)\n* [Distance Matrix](http://code.google.com/apis/maps/documentation/distancematrix/)\n* [Static Maps](http://code.google.com/apis/maps/documentation/staticmaps/)\n* [Street View](http://code.google.com/apis/maps/documentation/streetview/)\n\nTODO:\n\n* [Tests for everything](http://github.com/moshen/node-googlemaps/tree/master/test/) (using [vows](http://vowsjs.org/))\n\n# Usage\n    var gm = require('googlemaps');\n    var util = require('util');\n\n    gm.reverseGeocode('41.850033,-87.6500523', function(err, data){\n      util.puts(JSON.stringify(data));\n    });\n\n    gm.reverseGeocode(gm.checkAndConvertPoint([41.850033, -87.6500523]), function(err, data){\n      util.puts(JSON.stringify(data));\n    });\n\nBoth examples print:\n    {\"status\":\"OK\",\"results\":[{\"types\":[\"postal_code\"],\"formatted_address\":\"Chicago, IL 60695, USA\"...\n    \nFor the Static Maps API, you can pass in all the required parameters as well as markers, styles, and paths using the formats outlined below.\n    \n    markers = [\n    \t{ 'location': '300 W Main St Lock Haven, PA' },\n    \t{ 'location': '444 W Main St Lock Haven, PA',\n    \t\t'color': 'red',\n    \t\t'label': 'A',\n    \t\t'shadow': 'false',\n    \t\t'icon' : 'http://chart.apis.google.com/chart?chst=d_map_pin_icon&chld=cafe%7C996600'\n    \t}\n    ]\n\n    styles = [\n    \t{ 'feature': 'road', 'element': 'all', 'rules': \n    \t\t{ 'hue': '0x00ff00' }\n    \t}\n    ]\n\n    paths = [\n    \t{ 'color': '0x0000ff', 'weight': '5', 'points': \n    \t\t[ '41.139817,-77.454439', '41.138621,-77.451596' ]\n    \t}\n    ]\n\n    util.puts(gm.staticMap('444 W Main St Lock Haven PA', 15, '500x400', false, false, 'roadmap', markers, styles, paths));\n\nThis example prints the URL for the Static Map image: \"http://maps.googleapis.com/maps/api/staticmap?center=444%20W%20Main%20St%20Lock%20Haven%20PA&zoom=15&size=500x400&maptype=roadmap&markers=%7C300%20W%20Main%20St%20Lock%20Haven%2C%20PA&markers=%7Ccolor%3Ared%7Clabel%3AA%7Cicon%3Ahttp%3A%2F%2Fchart.apis.google.com%2Fchart%3Fchst%3Dd_map_pin_icon%26chld%3Dcafe%257C996600%7Cshadow%3Afalse%7C444%20W%20Main%20St%20Lock%20Haven%2C%20PA&style=%7Cfeature%3Aroad%7Celement%3Aall%7Chue%3A0x00ff00&path=weight%3A5%7Ccolor%3A0x0000ff%7C41.139817%2C-77.454439%7C41.138621%2C-77.451596&sensor=false\"\n\nBy giving gm.staticMap an optional callback, you can retreive the static map PNG data:\n\n    util.puts(gm.staticMap('444 W Main St Lock Haven PA', 15, '500x400', function(err, data){\n      require('fs').writeFileSync('test_map.png', data, 'binary');\n    }, false, 'roadmap', markers, styles, paths));\n\nYou will get a map like:\n\n![Some Map](http://maps.googleapis.com/maps/api/staticmap?center=444%20W%20Main%20St%20Lock%20Haven%20PA&zoom=15&size=500x400&maptype=roadmap&markers=%7C300%20W%20Main%20St%20Lock%20Haven%2C%20PA&markers=%7Ccolor%3Ared%7Clabel%3AA%7Cicon%3Ahttp%3A%2F%2Fchart.apis.google.com%2Fchart%3Fchst%3Dd_map_pin_icon%26chld%3Dcafe%257C996600%7Cshadow%3Afalse%7C444%20W%20Main%20St%20Lock%20Haven%2C%20PA&style=%7Cfeature%3Aroad%7Celement%3Aall%7Chue%3A0x00ff00&path=weight%3A5%7Ccolor%3A0x0000ff%7C41.139817%2C-77.454439%7C41.138621%2C-77.451596&sensor=false)\n\n# Configuration\n\nTo set the configuration you call `gm.config(key, value)` or `gm.config({key: value, .....})`\n\n### Useful Configuration Options\n\n`proxy` - set a proxy for http requests\n\n`stagger-time` - defaults to 200ms - stagger async call times when multiple requests are required\n\n`encode-polylines` - defaults to true - encodes polylines to the shorter Google format.\n\n`google-client-id` - used for setting business specific parameters\n\n`google-private-key`- used for setting business specific parameters\n\n-------------\n\nAll the googlemaps functions follow this scheme:\n    function(required, callback, optional)\n\nAll callbacks are expected to follow:\n    function(error, results)\nWhere the error returned is an Error object.\n\nPlease refer to the code, [tests](http://github.com/moshen/node-googlemaps/tree/master/test/) and the [Google Maps API docs](http://code.google.com/apis/maps/documentation/webservices/index.html) for further usage information.\n\n# Contributors\n\n[![evnm](https://secure.gravatar.com/avatar/2a8171b6c385b865e30bf070cf588329?s=50)](https://github.com/evnm)\n[![duncanm](https://secure.gravatar.com/avatar/7310945bafb21aa68b18d61d8b9d2d61?s=50)](https://github.com/duncanm)\n[![sugendran](https://secure.gravatar.com/avatar/3228aae57c1dc3f657bbc64c26c97b77?s=50)](https://github.com/sugendran)\n[![JoshSmith](https://secure.gravatar.com/avatar/b07d5a5f2e75633b2085142250a6762b?s=50)](https://github.com/JoshSmith)\n[![grobot](https://secure.gravatar.com/avatar/ba3313effc329919b09bca67827bdf10?s=50)](https://github.com/grobot)\n[![regality](https://secure.gravatar.com/avatar/fe513a9e239cebde58187721d67b7505?s=50)](https://github.com/regality)\n[![spatical](https://secure.gravatar.com/avatar/a7c5765a4a4dfbf697f728bd75223641?s=50)](https://github.com/spatical)\n\n",
  "readmeFilename": "README.md",
  "_id": "googlemaps@0.1.8",
  "dist": {
    "shasum": "d84e3a90a86fb211fff4611770efc3e22e12b3b2"
  },
  "_from": "googlemaps"
}
